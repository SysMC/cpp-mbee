В данном примере микроконтроллер MSP430 работает в качестве автономного сигнализатора беспроводной сети тревожных датчиков.
В качестве беспроводных датчиков могут быть использованы датчики протечки, пожарно-охранные извещатели, датчики газа, разбития стекла и тому подобные устройства с цифровым выходом.
Для организации беспроводной сети применяются радиомодули MBee-868-x.0, работающие под управлением программного обеспечения SerialStar.
Необходимые аппаратные средства:
1. Радиомодули MBee-868-2.0 или MBee-868-3.0 не менее 2 шт.
2. Отладочная плата MSP-EXP430FR2355 семейства LaunchPad.
3. Плата BOOSTXL-MBEE868-1.1 производства "Системы, модули и компоненты".
4. Плата MB-Tag-1.2 ("Системы, модули и компоненты").
5. Переходник USB-UART с адаптером для подключения радиомодуля. Рекомендуется использовать преобразователь MB-USBridge-1.2 ("Системы, модули и компоненты").

Все радиомодули должны быть запрограммированы актуальной версией программного обеспечения SerialStar (доступно для бесплатного скачивания на сайте www.sysmc.ru) и предварительно настроены:

Порядок загрузки ПО и настройки радиомодулей:
1. Подключить модуль к компьютеру через переходник USB-UART и определить номер COM-порта, который был присвоен переходнику при подключении. В случае необходимости, требуется установить драйверы FT232, если они не установятся автоматически.
2. С помощью программы SysmcBootLoader (доступна для бесплатного скачивания на сайте www.sysmc.ru) загрузить в модуль прошивку SerialStar.
3. Запустить любую терминальную программу с параметрами 9600 8N1.
4. Войти в командный режим передав последовательность +++ или нажав кнопку SYSTEM BUTTON на плате MB-USBridge-1.2.
Настройка модуля, подключаемого к датчику (здесь и далее <CR> означает нажатие кнопки "Enter"):
1. AT RE <CR>. Установить значения всех параметров "по умолчанию".
2. AT SM 4 <CR>. Установить "спящий" режим работы модуля с пробуждением по внутреннему таймеру.
3. AT SP 500 <CR>. Установить период таймера сна, равным 5 секунд.
4. AT MY 2 <CR>. Присвоить модулю сетевой адрес 2. Допустимый диапазон адресов датчиков SENSOR_ADDRESSES_START..SENSOR_ADDRESSES_END задается в файле "Alarm.h".
5. AT CN <CR>. Сохранить сделанные изменения, выйти из командного режима и выполнить рестарт модуля.

Подробное описание всех настраиваемых параметров находится в техническом описании программного обеспечения SerialStar.
После этого модуль необходимо вставить в плату MB-Tag-1.2 и подать на него питание.

Настройка модуля, подключаемого к сигнализатору:
1. AT RE <CR>. Установить значения всех параметров "по умолчанию".
2. AT AP 2 <CR>. Перевести модуль в пакетный режим работы UART с поддержкой ESCAPE-символов.
3. AT CN <CR>. Сохранить сделанные изменения, выйти из командного режима и выполнить рестарт модуля.

Установить радиомодуль на плату BOOSTXL-MBEE868-1.1, которая, в свою очередь, должна быть подключена к LaunchPad. 
На плате BOOSTXL-MBEE868-1.1 должны быть установлены следующие перемычки:
1. BUZZER в положении 2-3.
2. UART SW в положении INT.

Далее необходимо загрузить предпочитаемую среду разработки и запрограммировать микроконтроллер платы LaunchPad:
IAR.
Размеры выходных файлов примеров таковы, что позволяют работать с проектом даже на бесплатной версии IAR (Kickstart) с ограничением по длине кода 8 килобайт.
1. Для работы с примерами откройте файл Alarm.eww.

Code Composer Studio (CCS).
1. Запустите CCS.
2. Во вкладке Projects/Import CCS Projects выберите путь к каталогу cpp-mbee\examples\MSP430\CCS и импортируйте требуемые проекты с примерами в свое рабочее пространство (workspace).
3. Для корректного отображения комментариев при работе с проектом в Code Composer Studio (CCS) установите UTF-8 кодировку ("Window/Preferences/General/Workspace Text File Encoding = UTF-8).
 
Сигнализатор осуществляет прием пакетов (пакет 0x83 или 0x84) с данными о состоянии линий ввода/вывода от датчиков и фильтрует их на принадлежность заданному диапазону адресов.
Если в пакете содержится информация о состоянии вывода радиомодуля, определяемого константой ALARM_INPUT и если данный вывод используется как цифровой вход, то сигнализатор
управляет своим выводом, задаваемым параметрами GPIO_PORT_LAMP1 и GPIO_PIN_LAMP1 (файл BOOSTXL-MBEE868-1.1.h) в зависимости от состояния входа ALARM_INPUT.
Тревожный сигнал на выходе сигнализатора может быть временно (до прихода очередного пакета) выключен кнопкой BUTTON1.
В примере демонстрируется также возможность отправки сообщений в направлении от сигнализатора к удаленному датчику, находящемуся в спящем режиме. Для этого используется первый контакт DIP-переключателя. При переводе
его в положение ON на удаленный модуль отправляется команда перевода цифрового выхода ACTUATOR_OUTPUT на удаленном радиомодуле в высокий уровень. Для отключения выхода ACTUATOR_OUTPUT необходимо перевести первый контакт
DIP-переключателя в положение OFF.
Если проект компилируется с опцией ENABLE_CONSOLE, то второй модуль eUSCI, имеющийся в микроконтроллере MSP430 используется для выдачи диагностических сообщений, а также как
альтернативный управляющий интерфейс. Отправив на UART консоли символ '1' можно временно выключить выходной сигнал также, как это происходит при нажатии кнопки BUTTON1.
Настройки параметров консоли осуществляются в файле Alarm.h.

