/**
  @page Пример Control (Пульт управления)

  @verbatim
  ******************************************************************************
  * @file    Control/readme.txt
  * @author  von Boduen
  * @brief   Описание примера Control (Пульт управления).
  ******************************************************************************
  *
  * Copyright (c) 2020 Systems, modules and components. All rights reserved.
  *
  * Библиотека C++ для модулей MBee. Пример использования библиотеки cpp-mbee на микроконтроллерах STM32.
  * Распространяется свободно. Надеемся, что программные продукты, созданные
  * на основе данного примера будут полезными, однако никакие гарантии, явные или
  * подразумеваемые не предоставляются.
  *
  ******************************************************************************
  @endverbatim

@par Описание примера.

В данном примере микроконтроллер STM32 выполняет роль пульта беспроводной системы управления освещением.
Пульт может осуществлять дистанционное управление двумя типами нагрузки - дискретной (включено/выключено) и аналоговой с плавной регулировкой с помощью ШИМ-выхода.

@note Настройки периферийных модулей могут быть изменены с помощью проекта Control.ioc для STM32CubeMX .

@par Keywords

MBee, C++, Library, Wireless, SerialStar, Systems, Modules, Components, STM32

@par Directory contents
  - Control/Inc/adc.h                       Заголовочный файл драйвера АЦП
  - Control/Inc/gpio.h                      Заголовочный файл драйвера портов ввода/вывода gpio.c
  - Control/Inc/main.h                      Заголовочный файл для main.c
  - Control/Inc/stm32g0xx_hal_conf.h        Конфигурационный файл HAL
  - Control/Inc/stm32g0xx_it.h              Заголовочный файл для файла хэндлеров прерываний stm32g0xx_it.c
  - Control/Inc/sys.h                       Заголовочный файл драйвера системного модуля sys.c
  - Control/Inc/tim.h                       Заголовочный файл драйвера таймеров tim.c
  - Control/Inc/usart.h                     Заголовочный файл драйвера последовательного интерфейса usart.c
  - Control/Src/adc.c                       Драйвер АЦП
  - Control/Src/gpio.c                      Драйвер портов ввода/вывода
  - Control/Src/main.c                      Главный файл примера
  - Control/Src/stm32g0xx_hal_msp.c         Модуль HAL MSP
  - Control/Src/stm32g0xx_it.c              Хэндлеры прерываний
  - Control/Src/sys.c                       Драйвер модуля SYS
  - Control/Src/system_stm32g0xx.c          Исходные файлы ядра STM32G0xx
  - Control/Src/tim.c                       Драйвер таймера
  - Control/Src/usart.c                     Драйвер модуля последовательного интерфейса
  - Control/SW4STM32/Control/mainRename.bat Командный файл, вызываемый IDE SW4STM32 для переименования файла main.c в main.cpp перед компиляцией проекта (Pre-build steps).
  - Control/SW4STM32/Control/releaseConfigurationDefinedSymbolsC++Patch.dat Файл с Predefined symbols для IDE SW4STM32, предназначенный для фиксации бага в SW4STM32, вследствие которого при вызове компилятора g++ в конфигурации "Release" не происходит включение
                                            в командную строку символов, имеющихся в настройках C/C++ General/Paths and Symbols.

@par Необходимые аппаратные и программные средства:

  1. Радиомодули MBee-868-2.0 или MBee-868-3.0 не менее 2 шт.
  2. Отладочная плата NUCLEO-G071RB.
  3. Плата "Troyka Slot Shield v2", модули "Troyka MBee", "Кнопка со светодиодом" и "Потенциометр" производства фирмы "Амперка". Вместо "Troyka MBee" можно использовать любую плату из серии XBee Shield или совместимые. В случае отсутствия таковых, радиомодуль может
  быть соединен с платой NUCLEO с помощью всего 4 проводов: UART TX, UART RX, GND и +3,3В.
  4. Плата MB-Tag-1.2 ("Системы, модули и компоненты").
  5. Переходник USB-UART с адаптером для подключения радиомодуля. Рекомендуется использовать преобразователь MB-USBridge-1.2 ("Системы, модули и компоненты").

  Все радиомодули должны быть запрограммированы актуальной версией программного обеспечения SerialStar (доступно для бесплатного скачивания на сайте www.sysmc.ru) и предварительно настроены:

  Порядок загрузки ПО и настройки радиомодулей:
  1. Подключить модуль к компьютеру через переходник USB-UART и определить номер COM-порта, который был присвоен переходнику при подключении. В случае необходимости, требуется установить драйверы FT232, если они не установятся автоматически.
  2. С помощью программы SysmcBootLoader (доступна для бесплатного скачивания на сайте www.sysmc.ru) загрузить в модуль прошивку SerialStar.
  3. Запустить любую терминальную программу с параметрами 9600 8N1.
  4. Войти в командный режим передав последовательность +++ или нажав кнопку SYSTEM BUTTON на плате MB-USBridge-1.2.
  Настройка модуля, подключаемого к нагрузке (здесь и далее <CR> означает нажатие кнопки "Enter"):
  1. AT RE <CR>. Установить значения всех параметров "по умолчанию".
  2. AT R4 17 <CR>. Вывод модуля №31 настроить в режим первого канала ШИМ.
  3. AT TX 1 <CR>. Установить адрес модуля, которому будут передаваться ответные сообщения (пульту), равным 1.
  4. AT MY 2 <CR>. Присвоить модулю сетевой адрес 2.
  5. AT CN <CR>. Сохранить сделанные изменения, выйти из командного режима и выполнить рестарт модуля.

  Подробное описание всех настраиваемых параметров находится в техническом описании программного обеспечения SerialStar.
  После этого модуль необходимо вставить в плату MB-Tag-1.2 и подать на него питание.

  Настройка модуля, подключаемого к пульту:
  1. AT RE <CR>. Установить значения всех параметров "по-умолчанию".
  2. AT AP 2 <CR>. Перевести модуль в пакетный режим работы UART с поддержкой ESCAPE-символов.
  3. AT CN <CR>. Сохранить сделанные изменения, выйти из командного режима и выполнить рестарт модуля.

  Сборка макета:
  1. Установить радиомодуль на плату Troyka MBee, которая, в свою очередь, должна быть подключена к NUCLEO посредством адаптера Troyka Slot Shield v2.
  2. Установить модуль "Кнопка со светодиодом" в поле "D" платы Troyka Slot Shield v2. Линия "L" должна быть вставлена в контакт "A3".
  3. В поле "A" поставить модуль "Потенциометр". Вывод "S" должен вставляться в контакт "A4VG".

  Светодиод и кнопка модуля "Troyka" дублируется светодиодом и кнопкой, расположенными на плате NUCLEO.

@par Как пользоваться примером?
  Необходимо загрузить предпочитаемую среду разработки и запрограммировать микроконтроллер STM32:
  IAR.
  1. Откройте файл Project.eww, находящийся в папке EWARM.
  2. Откомпилируйте пример, загрузите его в микроконтроллер отладочной платы и запустите его.
  
  SW4STM32 (AC6).
  1. Откройте файл .cproject, находящийся в папке SW4STM32\Control.
  2. Откомпилируйте пример, загрузите его в микроконтроллер отладочной платы и запустите его.
  
  При необходимости изменить настройки аппаратных модулей микроконтроллера:
  1. Откройте с помощью STM32CubeMX файл Control.ioс.
  2. Выполните требуемые изменения.
  3. Выберите в Project Manager требуемый Toolchain/IDE (EWARM или SW4STM32). ВНИМАНИЕ! Если Вы выбрали SW4STM32, то обязательно снимите флажок с опции "Generate under root".
  4. Нажмите "GENERATE CODE".
  5. Если Вы пользуетесь SW4STM32, то перед первой компиляцией проекта исключите файл main.c из сборки, установив флажок "Exclude resource from build". Для этого щелкните правой кнопкой по файлу main.c и выберите в появившемся меню строку "Options".
     Требуемая опция находится в окне "C/C++ Build/Settings". Вместо файла main.c, при компиляции будет использоваться автоматически копируемый при запуске компилятора файл main.cpp. Исключить файл main.c необходимо как для конфигурации "Debug", так и 
     для "Release".

  Пульт дистанционно управляет одним дискретным и одним аналоговым каналом. Кроме этого он осуществляет контроль одного аналогового канала. В реальных системах в качестве объекта
  управления может быть использован, например, драйвер светодиодного светильника с релейным управлением или с возможностью плавной регулировки с помощью ШИМ. К аналоговому входу
  может быть подключен датчик тока драйвера. Мониторинг тока позволяет получать данные об исправности светильника и о величине потребляемой им энергии.
  Предусмотрено два режима взаимодействия с управляемым объектом - адресный и широковещательный. Для выбора режима используется вывод ADDRESS_MODE_SWITCH. Если этот никуда не подключен, то команды отправляются
  в широковещательном режиме и будут исполняться всеми радиомодулями, имеющими совпадающие сетевые и радиочастотные настройки. В широковещательном режиме контроль доставки команд не осуществляется.
  Если замкнуть линию ADDRESS_MODE_SWITCH на землю, то пульт переходит в режим адресного управления. Все команды будут отправляться модулю с сетевым адресом, определяемом
  константой TARGET_ADDRESS в файле main.h. При этом осуществляется контроль получения команды удаленным радиомодулем. Если какая-либо команда им не получена, то пульт выдает
  предупреждение - три коротких включения светодиодов. Все сигналы дублируются звуковым сигналом, подключенным к выходу BUZZER.
  При нажатии на кнопку, пульт отправляет команду включения или выключения цифрового выхода на удаленном модуле. Если модуль, установленный на плате MB-Tag-1.2 получит команду включения, на ней должен загореться
  светодиод, подключенный к выходу DO3. Управление ШИМ-выходом осуществляется с помощью потенциометра пульта. Если при вращении ручки потенциометра его сопротивление изменится более, чем на заданную величину, то
  пульт отправит на удаленный модуль команду установки нового значения рабочего цикла ШИМ. Чувствительность потенциометра определяется параметром POTENTIOMETER_SENSITIVITY в файле
  main.h. На плате MB-Tag-1.2 это должно приводить к изменению яркости светодиода на выходе DO2. Для контроля аналогового канала на удаленном модуле, пульт периодически передает команду запроса состояния линий
  ввода/вывода. Интервал задается параметром REMOTE_MODULE_POLL_PERIOD в файле main.h. Прием ответа на команду подтверждается кратковременным включением зеленого светодиода.
  Если измеренное значение напряжения на аналоговом входе AI1 на плате MB-Tag-1.2 превышает порог, определяемый константой CURRENT_MAX, то на пульте включается светодиод и на выходе BUZZER формируется звуковой
  сигнал. Для проверки контроля напряжения на аналоговом входе его можно подключить с помощью перемычки к выходу DO2. ВНИМАНИЕ! Поскольку на выходе DO2 формируется ШИМ-сигнал, то измеренное значение
  напряжения будет зависеть от момента проведения измерения, что может приводить к "ложным" превышениям порога CURRENT_MAX даже при низких средних уровнях напряжения. Для исключения этого можно увеличить емкость
  конденсатора, подключенного ко входу AI1 на плате MBee-Tag-1.2.
  Если проект компилируется с опцией ENABLE_CONSOLE (файл main.h), то появляется возможность использовать порт STMicroelectronics STLink Virtual COM Port для выдачи диагностических сообщений, а также как альтернативный управляющий
  интерфейс. Отключение консоли значительно уменьшает объем памяти, занимаемой примером. Настройки параметров консоли осуществляются в файле main.h. Управление осуществляется с помощью любой терминальной программы.
  Команды консоли:
  1. "1" - включение дискретного выхода на удаленном модуле.
  2. "2" - выключение дискретного выхода.
  3. "+" - увеличение рабочего цикла ШИМ на удаленном модуле на одну ступень. Число ступеней определяется параметром BRIGTHNESS_NUMBER_OF_STEPS в файле main.h.
  4. "-" - уменьшение рабочего чикла на 1 ступень.

 * <h3><center>&copy; Systems, modules and components</center></h3>
 */